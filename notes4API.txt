///////////////////////////////
█████╗ ██████╗ ██╗
██╔══██╗██╔══██╗██║
███████║██████╔╝██║
██╔══██║██╔═══╝ ██║
██║  ██║██║     ██║
╚═╝  ╚═╝╚═╝     ╚═╝
///////////////////////////////


api ->> application programmer interface

the dom is the api for html

how you communicate with an app

sessions and cookies are for browsers
tokens are for apps


create controller called questions in a separate folder

versioning in APIs

💻 rails g controller api/v1/questions

➕edit routes
    namespace :api, defaults: {format: :json} do
      namespace :v1 do
        resources :questions, only: [:show, :index]
      end
    end

access the route >>
  http://localhost:3000/api/v1/questions


➕ edit t💎he new controller
  def index
    @questions = Question.order(created_at: :desc)
    render json: @questions.to_json
  end

📝 JSON is just plain text
  in javascript ->object
  in ruby -> hash
  in python -> dictionary
📝 XML format used in AJAX
📝 DSL >> Domain Specific Language
jbuilder ->> used to generate json
🔗 https://github.com/rails/jbuilder

create in views index.json.jbuilder

💎 active model serializers to generate json from a model
🔗 https://github.com/rails-api/active_model_serializers

rails g>> all generators available

rails g serializer question

active model serializer class generates the json
question_serializer.rb
  attributes :id, :title, :created_on
  def created_on
    object.created_at.strftime('%Y-%B-%d')
  end
create question controller in show


rails g serializer answer

answer_serializer.rb


edit routes

rails/info/routes

controller questions controller

postman >>
post ->>>>>>>>>> http://localhost:3000/api/v1/questions
invalid! -change protect_from_forgery
Now post works!!
cross site forgery!!!->>> keeps everything contained in the same tab >> we use protect from forgery



question.rb
    belongs_to :user, optional: true


    # this will throw an exception every time you make a non-GET request that
    # doesn't include authenticity_token. When you use `form_for` or `form_tag`
    # in Rails, it auto generates a hidden field that contains the
    # authenticity_token.
    protect_from_forgery with: :exception


AUTHENTICATION API
rails g migration add_api_key_to_users api_key
in migration
      add_index :users, :api_key
rails db:migrate

in user.rb
    before_create :generate_api_key

in console
  User.all.each {|u| u.send(:generate_api_key); u.save}

These are the same
  "hello".capitalize
  "hello".send(:capitalize) ->> use if its a private method



  In questions controller
  before_action :authenticate


  we need
  protect_from_forgery with: :null_session
  before_action :authenticate
in every api so we create a base controller


created v2 of questions controller api

💎 Faraday Gem
🔗 https://github.com/lostisland/faraday
mkdir awesome_answers_ruby_client
